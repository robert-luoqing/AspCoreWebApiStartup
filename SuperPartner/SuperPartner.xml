<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SuperPartner</name>
    </assembly>
    <members>
        <member name="M:SuperPartner.Controllers.UserController.GetUserList(SuperPartner.Model.Common.WsListRequest{System.String})">
            <summary>
            Search user by keyword
            </summary>
            <param name="req">The conditio property is keyword which use to search User Name or Login Name</param>
            <returns>Matched user information</returns>
        </member>
        <member name="M:SuperPartner.Controllers.UserController.GetUserCount(SuperPartner.Model.Common.WsListRequest{System.String})">
            <summary>
            Get user count by keyword
            </summary>
            <param name="req">The conditio property is keyword which use to search User Name or Login Name</param>
            <returns>matched user count</returns>
        </member>
        <member name="M:SuperPartner.Controllers.UserController.AddUser(SuperPartner.Model.Organization.User.WsUserDetail)">
            <summary>
            Add user
            </summary>
            <param name="user">user information</param>
            <returns>Return success status if success</returns>
        </member>
        <member name="M:SuperPartner.Controllers.UserController.UpdateUser(SuperPartner.Model.Organization.User.WsUserDetail)">
            <summary>
            Update user
            </summary>
            <param name="user">user information</param>
            <returns>Return success status if success</returns>
        </member>
        <member name="M:SuperPartner.Controllers.UserController.Login(System.String,System.String)">
            <summary>
            Login by user name and password
            </summary>
            <remarks>
            <![CDATA[If login failed, the error message of trans object will return to invoke.]]>
            </remarks>
            <param name="loginName">login name</param>
            <param name="password">password</param>
            <returns>Return token if success, the exception will return if failed</returns>
        </member>
        <member name="T:SuperPartner.Filters.SpAuthFilter">
            <summary>
            The authorization filter
            It used to verify login or non-login API, and initial token, token's data
            </summary>
        </member>
        <member name="M:SuperPartner.Filters.SpAuthFilter.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            On authorization
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:SuperPartner.Filters.SpExceptionFilter">
            <summary>
            Author: Robert
            The class is used to intercept exception include business exception and system exception 
            golbal handle the exception and output to client. 
            It also log the exception to difference level. It can use analyze what issue occur in app.
            </summary>
        </member>
        <member name="T:SuperPartner.Filters.SpFunctionAttribute">
            <summary>
            It is attribute which use to check whether the user can access the functions.
            </summary>
        </member>
        <member name="F:SuperPartner.Filters.SpFunctionAttribute.passedByOneOf">
            <summary>
            If one of functions has passed permission check, then the authorizion have passed if passedByOneOf is true.
            else all of functions must be passed.
            </summary>
        </member>
        <member name="F:SuperPartner.Filters.SpFunctionAttribute.functions">
            <summary>
            The functions which need to checked
            </summary>
        </member>
        <member name="M:SuperPartner.Filters.SpFunctionAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Check permission according to the functions
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:SuperPartner.Program">
            <summary>
            entry
            </summary>
        </member>
        <member name="M:SuperPartner.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:SuperPartner.Program.CreateHostBuilder(System.String[])">
            <summary>
            Create host
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:SuperPartner.Startup">
            <summary>
            Startup entry
            </summary>
        </member>
        <member name="F:SuperPartner.Startup.MyLoggerFactory">
            <summary>
            Console logger provider.
            </summary>
        </member>
        <member name="P:SuperPartner.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:SuperPartner.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Startup constructor
            </summary>
            <param name="configuration">Configuation</param>
        </member>
        <member name="M:SuperPartner.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:SuperPartner.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:SuperPartner.SwaggerSetting">
            <summary>
            Swageer setting
            </summary>
        </member>
        <member name="M:SuperPartner.SwaggerSetting.Confige(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Config
            </summary>
            <param name="services">Services</param>
        </member>
    </members>
</doc>
